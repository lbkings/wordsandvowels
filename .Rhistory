result[6] = mysummary[6];
result[7] = sd(mydata);
result[8] = length(mydata);
result[9] = sum(is.na(mydata));
names(result) = c("min", "Q1", "median", "mean", "Q3", "max", "sd", "n", "missing");
result;
}
samp = t(replicate(100, favstats2(sample(population, size = 5))))
samp = data.frame(cbind(samp, rep(1, dim(samp)[1]), 1:dim(samp)[1]))
names(samp) = c("min", "Q1", "median", "mean", "Q3", "max", "sd", "n", "missing", ".row", ".index")
head(samp)
plot_ci = function (df, mu, ...) {
space = 0.1 * (max(df$upper) - min(df$lower))
xyplot(.index ~ mean, data=df, data2 = df, panel=panel.ci,
mu = mu, xlim = c(min(df$lower) - space, max(df$upper) + space), ylab = NULL)
samp = do(100) * favstats(sample(population, size = 5))
samp = do(100) * favstats(sample(population, size = 5))
sigma = sd(population)
samp = transform(samp, lower = mean - 1.645 * sigma/sqrt(5))
samp = transform(samp, upper = mean + 1.645 * sigma/sqrt(5))
plot_ci(samp, mu = mean(population))
favstats2 = function(mydata){
# input mydata is a numerical vector or matrices
result = rep(0, 9);
mysummary = summary(mydata);
result[1] = mysummary[1];
result[2] = mysummary[2];
result[3] = mysummary[3];
result[4] = mysummary[4];
result[5] = mysummary[5];
result[6] = mysummary[6];
result[7] = sd(mydata);
result[8] = length(mydata);
result[9] = sum(is.na(mydata));
names(result) = c("min", "Q1", "median", "mean", "Q3", "max", "sd", "n", "missing");
result;
}
samp = t(replicate(100, favstats2(sample(population, size = 5))))
samp = data.frame(cbind(samp, rep(1, dim(samp)[1]), 1:dim(samp)[1]))
names(samp) = c("min", "Q1", "median", "mean", "Q3", "max", "sd", "n", "missing", ".row", ".index")
head(samp)
panel.ci = function (x, y, mu, data2, ...) {
panel.xyplot(x, y, ...)
good = subset(data2, upper > mu & lower < mu)
bad = subset(data2, upper < mu | lower > mu)
with(good, panel.arrows(lower, .index, upper, .index, angle=90,
length = 0.05, ends="both"))
with(bad, panel.arrows(lower, .index, upper, .index, angle=90,
length = 0.05, ends="both", col="red", lwd=3))
panel.abline(v=mu, lty=2)
}
plot_ci = function (df, mu, ...) {
space = 0.1 * (max(df$upper) - min(df$lower))
xyplot(.index ~ mean, data=df, data2 = df, panel=panel.ci,
mu = mu, xlim = c(min(df$lower) - space, max(df$upper) + space), ylab = NULL)
samp = do(100) * favstats(sample(population, size = 5))
sigma = sd(population)
samp = transform(samp, lower = mean - 1.645 * sigma/sqrt(5))
samp = transform(samp, upper = mean + 1.645 * sigma/sqrt(5))
plot_ci(samp, mu = mean(population))
favstats2 = function(mydata){
# input mydata is a numerical vector or matrices
result = rep(0, 9);
mysummary = summary(mydata);
result[1] = mysummary[1];
result[2] = mysummary[2];
result[3] = mysummary[3];
result[4] = mysummary[4];
result[5] = mysummary[5];
result[6] = mysummary[6];
result[7] = sd(mydata);
result[8] = length(mydata);
result[9] = sum(is.na(mydata));
names(result) = c("min", "Q1", "median", "mean", "Q3", "max", "sd", "n", "missing");
result;
}
panel.ci = function (x, y, mu, data2, ...) {
panel.xyplot(x, y, ...)
good = subset(data2, upper > mu & lower < mu)
bad = subset(data2, upper < mu | lower > mu)
with(good, panel.arrows(lower, .index, upper, .index, angle=90,
length = 0.05, ends="both"))
with(bad, panel.arrows(lower, .index, upper, .index, angle=90,
length = 0.05, ends="both", col="red", lwd=3))
panel.abline(v=mu, lty=2)
}
plot_ci = function (df, mu, ...) {
space = 0.1 * (max(df$upper) - min(df$lower))
xyplot(.index ~ mean, data=df, data2 = df, panel=panel.ci,
mu = mu, xlim = c(min(df$lower) - space, max(df$upper) + space), ylab = NULL)
samp = do(100) * favstats(sample(population, size = 5))
sigma = sd(population)
samp = transform(samp, lower = mean - 1.645 * sigma/sqrt(5))
samp = transform(samp, upper = mean + 1.645 * sigma/sqrt(5))
plot_ci(samp, mu = mean(population))
samp = do(100) * favstats(sample(population, size = 5))
sigma = sd(population)
samp = transform(samp, lower = mean - 1.645 * sigma/sqrt(5))
samp = transform(samp, upper = mean + 1.645 * sigma/sqrt(5))
plot_ci(samp, mu = mean(population))
rm(list=ls())
plot_ci(samp, mu = mean(population))
samp = do(100) * favstats(sample(population, size = 5))
sigma = sd(population)
samp = transform(samp, lower = mean - 1.645 * sigma/sqrt(5))
samp = transform(samp, upper = mean + 1.645 * sigma/sqrt(5))
plot_ci(samp, mu = mean(population))
samp = transform(samp, lower = mean - 1.645 * sd/sqrt(5))
samp = transform(samp, upper = mean + 1.645 * sd/sqrt(5))
plot_ci(samp, mu = mean(population))
rm(list=ls())
samp = transform(samp, lower = mean - 1.645 * sd/sqrt(5))
samp = transform(samp, upper = mean + 1.645 * sd/sqrt(5))
plot_ci(samp, mu = mean(population))
samp = transform(samp, lower = mean - 1.645 * sd/sqrt(5))
samp = transform(samp, upper = mean + 1.645 * sd/sqrt(5))
plot_ci(samp, mu = mean(population))
samp = transform(samp, lower = mean - 1.645 * sd/sqrt(5))
samp = transform(samp, upper = mean + 1.645 * sd/sqrt(5))
plot_ci(samp, mu = mean(population))
rm(list=ls())
favstats2 = function(mydata){
# input mydata is a numerical vector or matrices
result = rep(0, 9);
mysummary = summary(mydata);
result[1] = mysummary[1];
result[2] = mysummary[2];
result[3] = mysummary[3];
result[4] = mysummary[4];
result[5] = mysummary[5];
result[6] = mysummary[6];
result[7] = sd(mydata);
result[8] = length(mydata);
result[9] = sum(is.na(mydata));
names(result) = c("min", "Q1", "median", "mean", "Q3", "max", "sd", "n", "missing");
result;
}
plot_ci = function (df, mu, ...) {
space = 0.1 * (max(df$upper) - min(df$lower))
xyplot(.index ~ mean, data=df, data2 = df, panel=panel.ci,
mu = mu, xlim = c(min(df$lower) - space, max(df$upper) + space), ylab = NULL)
}  result[7] = sd(mydata);
rm(list = ls())
library(tidyverse)
i <- 2 # define i
while(i < 18) { # while i is less than 18
i <- i * 2 # arithmetic of what you want i to do for each value
print(i)}
Natalie <- TRUE #Whether Natalie is in class today
if(Natalie == TRUE) {#If natalie is there
print("hi")  } else {
print("sad")}
Natalie <- TRUE #Whether Natalie is in class today
if(Natalie == TRUE) {#If natalie is there
print("good afternoon, Natalie")  } else {
print("hello?")}
Natalie <- FALSE
if(Natalie == TRUE) {#If natalie is there
print("good afternoon, Natalie")  } else {
print("hello?")}
hello.world <- function(prof.natalie, say) {
if prof.natalie == TRUE && say == "good afternoon, Natalie")
hello.world <- function(prof.natalie, say) {
if (prof.natalie == TRUE && say == "good afternoon, Natalie")
hello.world <- function(prof.natalie, class) {
if (prof.natalie == TRUE && class == "yes") {
"hi Natalie, how are you this afternoon?"
} else if (prof.natalie == FALSE && class == "yes") {
"Natalie, are you here??"
} else if (prof.natalie == TRUE != "yes") {
help(not equal to)
hello.world <- function(prof.natalie, class) {
if (prof.natalie == TRUE && class == "yes") {
"hi Natalie, how are you this afternoon?"
} else if (prof.natalie == FALSE && class == "yes") {
"Natalie, are you here??"
} else if (prof.natalie == TRUE !="yes") {
hello.world <- function(prof.natalie, class) {
if (prof.natalie == TRUE && class == "yes") {
"hi Natalie, how are you this afternoon?"
} else if (prof.natalie == FALSE && class == "yes") {
"Natalie, are you here??"
} else if (prof.natalie == TRUE !=="yes") {
hello.world <- function(prof.natalie, class) {
if (prof.natalie == TRUE && class == "yes") {
"hi Natalie, how are you this afternoon?"
} else if (prof.natalie == FALSE && class == "yes") {
"Natalie, are you here??"
} else if (prof.natalie == TRUE class(!)="yes") {
hello.world <- function(prof.natalie, class) {
if (prof.natalie == TRUE && class == "yes") {
"hi Natalie, how are you this afternoon?"
} else if (prof.natalie == FALSE && class == "yes") {
"Natalie, are you here??"
} else if (prof.natalie == TRUE && !="yes") {
hello.world <- function(prof.natalie, class) {
if (prof.natalie == TRUE && class == "yes") {
"hi Natalie, how are you this afternoon?"
} else if (prof.natalie == FALSE && class == "yes") {
"Natalie, are you here??"
} else if (prof.natalie == TRUE && class!="yes") {
"Hi, I guess I came on the wrong day to class. Sorry Natalie!"
} else if (prof.natalie == FALSE && class!="yes") {
"wait what day is it? oh no..."
}
hello.world <- function(prof.natalie, class) {
if (prof.natalie == TRUE && class == "yes") {
"hi Natalie, how are you this afternoon?"
} else if (prof.natalie == FALSE && class == "yes") {
"Natalie, are you here??"
} else if (prof.natalie == TRUE && class!="yes") {
"Hi, I guess I came on the wrong day to class. Sorry Natalie!"
} else if (prof.natalie == FALSE && class!="yes") {
"wait what day is it? oh no..."
phrase <- c("Hello World!!")
i <- 1
repeat{
i <- i + 1
print(phrase)
if(i>22){
break
}
}
phrase <- c("Hello World!!")
i <- 1
repeat{
i <- i + 1
print(phrase)
if(i>22){
break
phrase <- c("Hello World!!")
i <- 1
repeat{
i <- i + 1
print(phrase)
if(i>22){
break
phrase <- c("Hello World!!")
i <- 1
repeat{
i <- i + 1
print(phrase)
if(i>22){
break
}
phrase <- c("Hello World!!")
i <- 1
repeat{
i <- i + 1
print(phrase)
if(i>22){
break
}
}
phrase <- c("Hello World!!")
phrase <- c("Hello World!")
i <- 1
repeat{
i <- i + 1
print(phrase)
if(i > 10){
break
}
}
hello.world
hello.world <- function(prof.natalie, class) {
if (prof.natalie == TRUE && class == "yes") {
"hi Natalie, how are you this afternoon?"
hello.world <- function(prof.natalie) {
if (prof.natalie == TRUE) {
"hi Natalie, how are you this afternoon?"
} else if (prof.natalie == FALSE) {
"Natalie, are you here??"
prof.natalie == FALSE
hello.world <- function(prof.natalie) {
if (prof.natalie == TRUE) {
"hi Natalie, how are you this afternoon?"
} else if (prof.natalie == FALSE) {
"Natalie, are you here??"
hello.world <- function(prof.natalie) {
if (prof.natalie == TRUE) {
"hi Natalie, how are you this afternoon?"
} else if (prof.natalie == FALSE) {
"Natalie, are you here??"
hello.world <- function(prof.natalie)
hello.world <- function(prof.natalie)
hello.world <- function(prof.natalie) {
if (prof.natalie == TRUE) {
"hi Natalie, how are you this afternoon?"
} else if (prof.natalie == FALSE) {
"Natalie, are you here??"
}
rm(list = ls())
rm(list = ls())
hello.world
hello.world <- function(prof.natalie) {
if (prof.natalie == TRUE) {
"hi Natalie, how are you this afternoon?"
} else if (prof.natalie == FALSE) {
"Natalie, are you here??"
}
phrase <- c("Hello World!!")
i <- 1
repeat{
i <- i + 1
print(phrase)
if(i>22){
break
}
}
rm(list = ls())
library(tidyverse)
library(tidyverse)
hello.world <- function(prof.natalie) {
if (prof.natalie == TRUE) {
"hi Natalie, how are you this afternoon?"
} else if (prof.natalie == FALSE) {
"Natalie, are you here??"
}
phrase <- c("Hello World!!")
i <- 1
repeat{
i <- i + 1
print(phrase)
if(i>22){
break
}
}
library(tidyverse)
hello.world <- function(prof.natalie) {
if (prof.natalie == TRUE) {
"hi Natalie, how are you this afternoon?"
} else if (prof.natalie == FALSE) {
"Natalie, are you here??"
}
phrase <- c("Hello World!!")
i <- 1
repeat{
i <- i + 1
print(phrase)
if(i>22){
break
}
}
hello.world <- function(prof.natalie) {
if (prof.natalie == TRUE) {
"hi Natalie, how are you this afternoon?"
} else if (prof.natalie == FALSE) {
"Natalie, are you here??"
}
phrase <- c("Hello World!!")
i <- 1
repeat{
i <- i + 1
print(phrase)
if(i>22){
break
}
}
library(tidyverse)
hello.world <- function(prof.natalie) {
if (prof.natalie == TRUE) {
"hi Natalie, how are you this afternoon?"
} else if (prof.natalie == FALSE) {
"Natalie, are you here??"
}
phrase <- c("Hello World!!")
i <- 1
repeat{
i <- i + 1
print(phrase)
if(i>22){
break
}
}
hello.world
hello.world <- function(prof.natalie) {
if (prof.natalie == TRUE) {
"hi Natalie, how are you this afternoon?"
} else if (prof.natalie == FALSE) {
"Natalie, are you here??"
}
phrase <- c("Hello World!!")
i <- 1
repeat{
i <- i + 1
print(phrase)
if(i>22){
break
}
}
if (prof.natalie == TRUE) {
"hi Natalie, how are you this afternoon?"
i <- 2 # define i
while(i < 18) { # while i is less than 18
i <- i * 2 # arithmetic of what you want i to do for each value
print(i)}
hello.world <- function(prof.natalie) {
if (prof.natalie == TRUE) {
"hi Natalie, how are you this afternoon?"
} else if (prof.natalie == FALSE) {
"Natalie, are you here??"
}
phrase <- c("Hello World!!")
i <- 1
repeat{
i <- i + 1
print(phrase)
if(i>22){
break
}
}
hello.world
hello_world <- function(prof.natalie) {
if (prof.natalie == TRUE) {
"hi Natalie, how are you this afternoon?"
} else if (prof.natalie == FALSE) {
"Natalie, are you here??"
}
phrase <- c("Hello World!!")
i <- 1
repeat{
i <- i + 1
print(phrase)
if(i>22){
break
}
}
hello_world(TRUE)
# while loop practice
i <- 2 # define i
while(i < 18) { # while i is less than 18
i <- i * 2 # arithmetic of what you want i to do for each value
print(i)} # print value of i to console
hello_world <- function(prof.natalie) {
if (prof.natalie == TRUE) {
"hi Natalie, how are you this afternoon?"
} else if (prof.natalie == FALSE) {
"Natalie, are you here??"
}
phrase <- ("Hello World!!")
i <- 1
repeat{
i <- i + 1
print(phrase)
if(i>22){
break
}
}
hello_world(TRUE)
hello_world(TRUE)
hello_world <- function(prof.natalie) {
if (prof.natalie == TRUE) {
"hi Natalie, how are you this afternoon?"
} else if (prof.natalie == FALSE) {
"Natalie, are you here??"
}
phrase <- ("Hello World!!")
i <- 1
repeat{
i <- i + 1
print(phrase)
if(i>22){
break
}
}
hello_world(TRUE)
hello_world <- function(prof.natalie) {
if (prof.natalie == TRUE) {
"hi Natalie, how are you this afternoon?"
} else if (prof.natalie == FALSE) {
"Natalie, are you here??"
}
phrase <- ("Hello World!!")
i <- 1
repeat{
i <- i + 1
print(phrase)
if(i>22){
break
}
}
hello_world <- function(prof.natalie) {
if (prof.natalie == TRUE) {
"hi Natalie, how are you this afternoon?"
} else if (prof.natalie == FALSE) {
"Natalie, are you here??"
}
phrase <- ("Hello World!!")
i <- 1
repeat{
i <- i + 1
print(phrase)
if(i>22){
break
}
}
whyisr.stupid <- function(annoyingaf) {
if(whyisr.stupid == TRUE) {
"i hate r so f-ing much"
} else if (whyisr.stupid == FALSE) {
"r is always stupid so this is wrong"
}
}
library("papaja")
library(tidyverse)
library(lattice)
library(magrittr)
r_refs("r-references.bib")
install.packages('jmv')
install.packages('haven')
install.packages('jmvReadWrite')
